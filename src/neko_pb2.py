# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: neko.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nneko.proto\x12\x0bneko.backup\"J\n\x13\x42rokenBackupHistory\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x10\n\x08lastRead\x18\x02 \x01(\x03\x12\x14\n\x0creadDuration\x18\x03 \x01(\x03\"D\n\rBackupHistory\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x10\n\x08lastRead\x18\x02 \x01(\x03\x12\x14\n\x0creadDuration\x18\x03 \x01(\x03\"\x84\x02\n\x0e\x42\x61\x63kupTracking\x12\x0e\n\x06syncId\x18\x01 \x01(\x05\x12\x11\n\tlibraryId\x18\x02 \x01(\x03\x12\x12\n\nmediaIdInt\x18\x03 \x01(\x05\x12\x13\n\x0btrackingUrl\x18\x04 \x01(\t\x12\r\n\x05title\x18\x05 \x01(\t\x12\x17\n\x0flastChapterRead\x18\x06 \x01(\x02\x12\x15\n\rtotalChapters\x18\x07 \x01(\x05\x12\r\n\x05score\x18\x08 \x01(\x02\x12\x0e\n\x06status\x18\t \x01(\x05\x12\x1a\n\x12startedReadingDate\x18\n \x01(\x03\x12\x1b\n\x13\x66inishedReadingDate\x18\x0b \x01(\x03\x12\x0f\n\x07mediaId\x18\x64 \x01(\x03\"\xe1\x05\n\x0b\x42\x61\x63kupManga\x12\x0e\n\x06source\x18\x01 \x01(\x03\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\r\n\x05title\x18\x03 \x01(\t\x12\x0e\n\x06\x61rtist\x18\x04 \x01(\t\x12\x0e\n\x06\x61uthor\x18\x05 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\r\n\x05genre\x18\x07 \x03(\t\x12\x0e\n\x06status\x18\x08 \x01(\x05\x12\x14\n\x0cthumbnailUrl\x18\t \x01(\t\x12\x13\n\x0b\x63ustomCover\x18\n \x01(\t\x12\x12\n\nlastUpdate\x18\x0b \x01(\x03\x12\x10\n\x08lastInit\x18\x0c \x01(\x03\x12\x11\n\tdateAdded\x18\r \x01(\x03\x12\x0e\n\x06viewer\x18\x0e \x01(\x05\x12\r\n\x05\x66lags\x18\x0f \x01(\x05\x12,\n\x08\x63hapters\x18\x10 \x03(\x0b\x32\x1a.neko.backup.BackupChapter\x12\x12\n\ncategories\x18\x11 \x03(\x05\x12-\n\x08tracking\x18\x12 \x03(\x0b\x32\x1b.neko.backup.BackupTracking\x12\x10\n\x08\x66\x61vorite\x18\x64 \x01(\x08\x12\x14\n\x0c\x63hapterFlags\x18\x65 \x01(\x05\x12\x37\n\rbrokenHistory\x18\x66 \x03(\x0b\x32 .neko.backup.BrokenBackupHistory\x12\x14\n\x0cviewer_flags\x18g \x01(\x05\x12+\n\x07history\x18h \x03(\x0b\x32\x1a.neko.backup.BackupHistory\x12\x14\n\x0b\x63ustomTitle\x18\xa0\x06 \x01(\t\x12\x17\n\x0emergedMangaUrl\x18\x84\x07 \x01(\t\x12\x18\n\x0fscanlatorFilter\x18\x85\x07 \x01(\t\x12\x1c\n\x13mergedMangaImageUrl\x18\x86\x07 \x01(\t\x12\x1b\n\x12\x61lternativeArtwork\x18\x87\x07 \x01(\t\x12\x36\n\x0emergeMangaList\x18\x88\x07 \x03(\x0b\x32\x1d.neko.backup.BackupMergeManga\"S\n\x10\x42\x61\x63kupMergeManga\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\t\x12\x10\n\x08\x63overUrl\x18\x03 \x01(\t\x12\x11\n\tmergeType\x18\x04 \x01(\x05\"\xda\x01\n\rBackupChapter\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\tscanlator\x18\x03 \x01(\t\x12\x0c\n\x04read\x18\x04 \x01(\x08\x12\x10\n\x08\x62ookmark\x18\x05 \x01(\x08\x12\x14\n\x0clastPageRead\x18\x06 \x01(\x05\x12\x11\n\tdateFetch\x18\x07 \x01(\x03\x12\x12\n\ndateUpload\x18\x08 \x01(\x03\x12\x15\n\rchapterNumber\x18\t \x01(\x02\x12\x13\n\x0bsourceOrder\x18\n \x01(\x05\x12\x12\n\tpagesLeft\x18\xa0\x06 \x01(\x05\"T\n\x0e\x42\x61\x63kupCategory\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05order\x18\x02 \x01(\x05\x12\x16\n\x0eupdateInterval\x18\x03 \x01(\x05\x12\r\n\x05\x66lags\x18\x64 \x01(\x05\"n\n\x06\x42\x61\x63kup\x12-\n\x0b\x62\x61\x63kupManga\x18\x01 \x03(\x0b\x32\x18.neko.backup.BackupManga\x12\x35\n\x10\x62\x61\x63kupCategories\x18\x02 \x03(\x0b\x32\x1b.neko.backup.BackupCategoryb\x06proto3')



_BROKENBACKUPHISTORY = DESCRIPTOR.message_types_by_name['BrokenBackupHistory']
_BACKUPHISTORY = DESCRIPTOR.message_types_by_name['BackupHistory']
_BACKUPTRACKING = DESCRIPTOR.message_types_by_name['BackupTracking']
_BACKUPMANGA = DESCRIPTOR.message_types_by_name['BackupManga']
_BACKUPMERGEMANGA = DESCRIPTOR.message_types_by_name['BackupMergeManga']
_BACKUPCHAPTER = DESCRIPTOR.message_types_by_name['BackupChapter']
_BACKUPCATEGORY = DESCRIPTOR.message_types_by_name['BackupCategory']
_BACKUP = DESCRIPTOR.message_types_by_name['Backup']
BrokenBackupHistory = _reflection.GeneratedProtocolMessageType('BrokenBackupHistory', (_message.Message,), {
  'DESCRIPTOR' : _BROKENBACKUPHISTORY,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BrokenBackupHistory)
  })
_sym_db.RegisterMessage(BrokenBackupHistory)

BackupHistory = _reflection.GeneratedProtocolMessageType('BackupHistory', (_message.Message,), {
  'DESCRIPTOR' : _BACKUPHISTORY,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BackupHistory)
  })
_sym_db.RegisterMessage(BackupHistory)

BackupTracking = _reflection.GeneratedProtocolMessageType('BackupTracking', (_message.Message,), {
  'DESCRIPTOR' : _BACKUPTRACKING,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BackupTracking)
  })
_sym_db.RegisterMessage(BackupTracking)

BackupManga = _reflection.GeneratedProtocolMessageType('BackupManga', (_message.Message,), {
  'DESCRIPTOR' : _BACKUPMANGA,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BackupManga)
  })
_sym_db.RegisterMessage(BackupManga)

BackupMergeManga = _reflection.GeneratedProtocolMessageType('BackupMergeManga', (_message.Message,), {
  'DESCRIPTOR' : _BACKUPMERGEMANGA,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BackupMergeManga)
  })
_sym_db.RegisterMessage(BackupMergeManga)

BackupChapter = _reflection.GeneratedProtocolMessageType('BackupChapter', (_message.Message,), {
  'DESCRIPTOR' : _BACKUPCHAPTER,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BackupChapter)
  })
_sym_db.RegisterMessage(BackupChapter)

BackupCategory = _reflection.GeneratedProtocolMessageType('BackupCategory', (_message.Message,), {
  'DESCRIPTOR' : _BACKUPCATEGORY,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.BackupCategory)
  })
_sym_db.RegisterMessage(BackupCategory)

Backup = _reflection.GeneratedProtocolMessageType('Backup', (_message.Message,), {
  'DESCRIPTOR' : _BACKUP,
  '__module__' : 'neko_pb2'
  # @@protoc_insertion_point(class_scope:neko.backup.Backup)
  })
_sym_db.RegisterMessage(Backup)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BROKENBACKUPHISTORY._serialized_start=27
  _BROKENBACKUPHISTORY._serialized_end=101
  _BACKUPHISTORY._serialized_start=103
  _BACKUPHISTORY._serialized_end=171
  _BACKUPTRACKING._serialized_start=174
  _BACKUPTRACKING._serialized_end=434
  _BACKUPMANGA._serialized_start=437
  _BACKUPMANGA._serialized_end=1174
  _BACKUPMERGEMANGA._serialized_start=1176
  _BACKUPMERGEMANGA._serialized_end=1259
  _BACKUPCHAPTER._serialized_start=1262
  _BACKUPCHAPTER._serialized_end=1480
  _BACKUPCATEGORY._serialized_start=1482
  _BACKUPCATEGORY._serialized_end=1566
  _BACKUP._serialized_start=1568
  _BACKUP._serialized_end=1678
# @@protoc_insertion_point(module_scope)
